---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Heading from "@/components/Heading.astro";
import {
  Card,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";

import { getCollection } from "astro:content";
import type { Site } from "@/lib/siteHelpers";
import { sitesAndTags } from "@/lib/siteHelpers";

// Fetch all tags
const tags = await getCollection("sites");
const { allTags } = sitesAndTags(tags);
const tagsSorted: string[] = allTags ? Object.keys(allTags).sort() : [];

// Generate static paths for each tag
export async function getStaticPaths() {
  const sites = await getCollection("sites");
  const { allTags } = sitesAndTags(sites);

  return Object.keys(allTags).map((tag) => ({
    params: { tag },
    props: { sites: allTags[tag] },
  }));
}

const { tag } = Astro.params;
const { sites }: { sites: Site[] } = Astro.props;

const tagHeader = `${sites.length} site${sites.length === 1 ? "" : "s"} tagged with "${tag}"`;
const title = `${tagHeader} | Sites You Wish You Knew Earlier!`;
const description = tagHeader;
---

<BaseLayout title={title} description={description}>
  <Heading>Browse Sites by Tag</Heading>
  <div class="flex flex-wrap gap-1">
    {
      tagsSorted.map((tag) => (
        <Badge>
          <a href={`/tag/${tag}/`}>
            {tag} | {allTags[tag].length}
          </a>
        </Badge>
      ))
    }
  </div>

  <Heading>{tagHeader}</Heading>

  <div class="pt-4">
    {
      sites.map(({ id, data }: Site) => (
        <div class="pb-2">
          <Card key={id}>
            <a href={data.site} target="_blank">
              <CardHeader>
                <CardTitle>{title}</CardTitle>
                <CardDescription>{description}</CardDescription>
              </CardHeader>
              <CardFooter className="flex flex-wrap gap-1">
                {(data.tags ?? []).map((tag) => (
                  <Badge>
                    <a href={`/tag/${tag}/`}>{tag}</a>
                  </Badge>
                ))}
              </CardFooter>
            </a>
          </Card>
        </div>
      ))
    }
  </div>
</BaseLayout>
