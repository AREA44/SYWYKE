---
import BaseLayout from '@/layouts/BaseLayout.astro'
import Section from '@/components/Section.astro'
import OutlineHeading from '@/components/OutlineHeading.astro'
import ListItem from '@/components/ListItem.astro'
import { sitesAndTags } from '@/utils/sites'

const tags = await Astro.glob('../../data/*.md')
const { allTags } = sitesAndTags(tags)
const tagsSorted = allTags ? Object.keys(allTags).sort() : []

export async function getStaticPaths() {
  let sites = await Astro.glob(`../../data/*.md`)
  const { allTags } = sitesAndTags(sites)
  return Object.keys(allTags).map((tag) => ({
    params: { tag: tag },
    props: { sites: allTags[tag] },
  }))
}

const { tag } = Astro.params
const { sites } = Astro.props

let tagHeader = `${sites.length} site${
  sites.length === 1 ? '' : 's'
} tagged with "${tag}"`
let title = `${tagHeader} | Sites You Wish You Know Earlier!`
let description = tagHeader
---

<style>
  .tags {
    text-align: center;
    padding: 0;
  }
  .tags li {
    display: inline-block;
    margin-bottom: 0.5em;
  }
</style>

<BaseLayout title={title} description={description}>
  <section>
    <OutlineHeading>Browse Sites by tag</OutlineHeading>
    <Section>
      <ul class="tags">
        {
          tagsSorted.map((tag) => (
            <li>
              <a href={`/tag/${tag}/`} class={`tag ${tag}`}>
                {tag}|{allTags[tag].length}
              </a>
            </li>
          ))
        }
      </ul>
    </Section>

    <OutlineHeading>{tagHeader}</OutlineHeading>
    <Section>
      <ul>
        {
          sites.map(
            ({ url, frontmatter: { description, site, title, tags } }) => (
              <ListItem {url} {description} {site} {title} {tags} />
            ),
          )
        }
      </ul>
    </Section>
  </section>
</BaseLayout>
