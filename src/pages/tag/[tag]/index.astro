---
import Heading from "@/components/Heading.astro";
import Paginator from "@/components/Paginator.astro";
import { Badge } from "@/components/ui/badge";
import {
  Card,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import BaseLayout from "@/layouts/BaseLayout.astro";
import {
  extractUniqueTags,
  getSitesByTag,
  getSortedSites,
  slugify,
} from "@/lib/siteUtils";

export async function getStaticPaths() {
  const sites = await getSortedSites();

  const tagsCount = new Map<string, number>();
  for (const site of sites) {
    for (const tag of site.data.tags ?? []) {
      tagsCount.set(tag, (tagsCount.get(tag) || 0) + 1);
    }
  }

  return Array.from(tagsCount.entries()).map(([tag]) => ({
    params: { tag: slugify(tag) },
    props: { tag },
  }));
}

// Props
const { tag } = Astro.props;
const page = 1;
const perPage = 10;

const { paginated, totalPages, allFiltered } = await getSitesByTag(
  tag,
  page,
  perPage,
);
const uniqueTags = extractUniqueTags(allFiltered);

const tagHeader = `${allFiltered.length} site${allFiltered.length === 1 ? "" : "s"} tagged with "${tag}"`;
const title = `${tagHeader} | SYWYKE`;
const description = tagHeader;

const basePath = `/tag/${slugify(tag)}`;
---

<BaseLayout title={title} description={description}>
  <Heading>Browse Sites by Tag</Heading>

  <div class="flex flex-wrap gap-1 mb-4">
    {
      uniqueTags.map((oneTag) => (
        <Badge key={oneTag}>
          <a href={`/tag/${slugify(oneTag)}/`}>{oneTag}</a>
        </Badge>
      ))
    }
  </div>

  <Heading>{tagHeader}</Heading>

  <section class="pt-4 space-y-4">
    {
      paginated.map((site) => (
        <Card key={site.id}>
          <CardHeader>
            <CardTitle>
              <a
                href={site.data.url}
                target="_blank"
                rel="noopener noreferrer"
                class="hover:underline"
              >
                {site.data.title}
              </a>
            </CardTitle>
            <CardDescription>{site.data.description}</CardDescription>
          </CardHeader>
          <CardFooter className="flex flex-wrap gap-1">
            {(site.data.tags ?? []).map((t) => (
              <Badge key={t}>
                <a href={`/tag/${slugify(t)}/`}>{t}</a>
              </Badge>
            ))}
          </CardFooter>
        </Card>
      ))
    }
  </section>

  <div class="mt-8 flex justify-center">
    <Paginator currentPage={page} totalPages={totalPages} basePath={basePath} />
  </div>
</BaseLayout>
